{"ast":null,"code":"var _jsxFileName = \"/Users/marzena/gato-negro/src/components/signIn/SignIn.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './signIn.scss';\nimport FormInput from '../formInput/FormInput';\nimport CustomButton from '../button/CustomButton';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/userActions';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      onChange: this.handleChange,\n      value: email,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"log in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: googleSignInStart,\n      type: \"button\",\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"log in with Google\"))));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart(email, password))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/marzena/gato-negro/src/components/signIn/SignIn.jsx"],"names":["React","Component","connect","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","emailSignInStart","SignIn","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","e","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from  'react';\nimport {connect} from 'react-redux';\nimport './signIn.scss';\nimport FormInput from '../formInput/FormInput';\nimport CustomButton from '../button/CustomButton';\n\nimport {auth, signInWithGoogle} from '../../firebase/firebase.utils'\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/userActions';\n\nclass SignIn extends Component {\nconstructor(props){\n    super(props);\n\n    this.state = {\n        email: '',\n        password: ''\n    }\n};\n\nhandleSubmit = async event => {\n    event.preventDefault();\n\n    const {email, password} = this.state;\n\n    try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({email:'', password:''})\n\n    } catch(error) {\n        console.log(error)\n    }\n};\n\nhandleChange = (e) => {\n    const {value, name} = e.target;\n    this.setState({[name]: value})\n};\n\nrender () {\n    const {googleSignInStart} = this.props;\n    const {email, password} = this.state;\n\n    return(\n        <div className=\"sign-in\">\n            <h2 className='title'>I already have an account</h2>\n            <span>Sign in with your email and password</span>\n            <form onSubmit={this.handleSubmit}>\n                <FormInput \n                    name=\"email\" \n                    type=\"email\" \n                    onChange={this.handleChange}\n                    value={email} \n                    label='Email'\n                    required />\n               \n                <FormInput \n                    name=\"password\" \n                    type=\"password\" \n                    value={password} \n                    onChange={this.handleChange}\n                    label='Password'\n                    required />\n               \n\n                <div className=\"buttons\">\n                    <CustomButton type=\"submit\">log in</CustomButton>\n                    <CustomButton onClick={googleSignInStart} type=\"button\" isGoogleSignIn >log in with Google</CustomButton>\n                </div>\n            </form>\n        </div>\n    )}\n};\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart(email, password))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}