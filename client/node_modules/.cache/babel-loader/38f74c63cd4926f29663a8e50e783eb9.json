{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './userTypes';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './userActions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n;\nexport function* signUp() {\n  try {} catch (error) {\n    yield put;\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\n;\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}\n;","map":{"version":3,"sources":["/Users/marzena/gato-negro/src/redux/user/userSagas.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\nimport userActionTypes from './userTypes';\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\nimport {signInSuccess, signInFailure, signOutSuccess, signOutFailure} from './userActions';\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    } catch(error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch(error) {\n        yield put(signInFailure(error));\n    }\n};\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    } catch(error) {\n        yield put(signInFailure(error));\n    }\n};\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n\n    } catch(error) {\n        yield put(signInFailure(error));\n    }\n};\n\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    } catch(error) {\n        yield put(signOutFailure(error));\n    }\n};\n\nexport function* signUp() {\n    try {\n\n    } catch(error) {\n        yield put\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n};\n\nexport function* onCheckUserSession() {\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n};\n\nexport function* onSignOutStart() {\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n};\n\nexport function* onSignUpStart() {\n    yield takeLatest(userActionTypes.SIGN_UP_START, signUp )\n};\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart), \n        call(onEmailSignInStart), \n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUpStart)\n    ])\n};\n\n\n"]},"metadata":{},"sourceType":"module"}