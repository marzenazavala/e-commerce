{"ast":null,"code":"var _jsxFileName = \"/Users/marzena/gato-negro/src/pages/shopPage/ShopPage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collectionsOverview/CollectionsOverview';\nimport CollectionPage from '../collection/Collection';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/withSpinner/WithSpinner';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shopSelectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: selectIsCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  IsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/marzena/gato-negro/src/pages/shopPage/ShopPage.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","connect","fetchCollectionsStartAsync","WithSpinner","createStructuredSelector","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","IsCollectionsLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,8BAAzC;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,0BAAR,EAAoCC,yBAApC,QAAoE,gCAApE;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMS,yBAAyB,GAAGL,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMS,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACT,MAAAA;AAAD,QAA+B,KAAKU,KAA1C;AACAV,IAAAA,0BAA0B;AAC7B;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAgC,KAAKH,KAA3C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AACU,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAD9B;AAEI,MAAA,MAAM,EAAEJ,KAAK,iBACT,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAOI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAEJ,KAAK,iBACT,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEN;AAAtC,SAAqEM,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAgBH;;AA1BkC;;AA4BnC;AAEJ,MAAMK,eAAe,GAAGb,wBAAwB,CAAC;AAC7CW,EAAAA,oBAAoB,EAAEV,0BADuB;AAE7Ca,EAAAA;AAF6C,CAAD,CAAhD;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport CollectionsOverview from '../../components/collectionsOverview/CollectionsOverview';\nimport CollectionPage from '../collection/Collection';\nimport {connect} from 'react-redux';\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/withSpinner/WithSpinner';\nimport {createStructuredSelector} from 'reselect';\nimport {selectIsCollectionFetching, selectIsCollectionsLoaded} from '../../redux/shop/shopSelectors';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n    componentDidMount(){\n        const {fetchCollectionsStartAsync} = this.props;\n        fetchCollectionsStartAsync();\n    };\n\n    render() {\n        const {match, isCollectionFetching} = this.props;\n        \n        return(\n            <div className=\"shop-page\">\n                <Route \n                    exact path={`${match.path}`} \n                    render={props => (\n                        <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />\n                    )} \n                />\n                <Route\n                    path={`${match.path}/:collectionId`}\n                    render={props => (\n                        <CollectionPageWithSpinner isLoading={selectIsCollectionsLoaded} {...props} />\n                    )}\n                />   \n            </div>\n        )\n    }\n    \n   };\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    IsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}