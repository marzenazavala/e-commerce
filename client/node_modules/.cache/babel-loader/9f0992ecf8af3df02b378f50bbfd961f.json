{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollecctionsStart } from './shop/shopSaga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); //sagaMiddleware.run(fetchCollecctionsStart)\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/marzena/gato-negro/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootReducer","createSagaMiddleware","fetchCollecctionsStart","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,sBAAR,QAAqC,iBAArC;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AACA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAEA,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CAEP;;AAEA,OAAO,MAAMM,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AAGR,eAAe;AAACA,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\nimport {persistStore} from 'redux-persist';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport {fetchCollecctionsStart} from './shop/shopSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif(process.env.NODE_ENV === 'development'){\n    middlewares.push(logger);\n}\n\n export const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n //sagaMiddleware.run(fetchCollecctionsStart)\n\n export const persistor = persistStore(store);\n\n\nexport default {store, persistor}\n"]},"metadata":{},"sourceType":"module"}