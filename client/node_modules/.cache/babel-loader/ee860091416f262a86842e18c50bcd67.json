{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport shopActionTypes from './shopTypes';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shopActions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put;\n  } catch (error) {} // collectionRef\n  // .get()\n  // .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;","map":{"version":3,"sources":["/Users/marzena/gato-negro/src/redux/shop/shopSagas.js"],"names":["takeEvery","call","put","shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAmC,oBAAnC;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,eAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACA,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACI,+BAAD,EAAkCQ,QAAlC,CAAjC;AACA,UAAMX,GAAN;AACH,GALD,CAKE,OAAOc,KAAP,EAAc,CAEf,CAVmC,CAgBhC;AACA;AACA;AACA;AACA;AACA;;AACP;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMjB,SAAS,CACXG,eAAe,CAACe,uBADL,EAEXV,qBAFW,CAAf;AAIH;AAAA","sourcesContent":["import {takeEvery, call, put} from 'redux-saga/effects';\n\nimport shopActionTypes from './shopTypes';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shopActions';\n\nexport function* fetchCollectionsAsync(){\n    yield console.log('I am fired')\n\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        yield put\n    } catch (error) {\n\n    }\n   \n\n\n\n\n        // collectionRef\n        // .get()\n        // .then(snapshot => {\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //     dispatch(fetchCollectionsSuccess(collectionsMap));\n        // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n};\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(\n        shopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    );\n};"]},"metadata":{},"sourceType":"module"}