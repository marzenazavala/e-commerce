{"ast":null,"code":"var _jsxFileName = \"/Users/marzena/gato-negro/src/pages/shopPage/ShopPage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from \"../../components/collectionsOverview/CollectionsOverview\";\nimport CollectionPage from '../collection/Collection';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/withSpinner/WithSpinner';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching } from '../../redux/shop/shopSelectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(fetchCollectionsStartAsync(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/marzena/gato-negro/src/pages/shopPage/ShopPage.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","connect","fetchCollectionsStartAsync","WithSpinner","createStructuredSelector","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","render","match","props","loading","state","path","mapDispatchToProps","dispatch","updateCollections","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACJ,mBAAD,CAAlD;AACA,MAAMQ,yBAAyB,GAAGJ,WAAW,CAACH,cAAD,CAA7C;;AAGA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAE,CAElB;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;AACA,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKC,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEH,KAAK,CAACI,IAAK,EAAjC;AACA,MAAA,MAAM,EAAEH,KAAK,iBACT,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEC;AAA3C,SAAwDD,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,eAMQ,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAED,KAAK,CAACI,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAEH,KAAK,iBACT,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEC;AAAtC,SAAmDD,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,CADJ;AAgBH;;AAzBkC;;AA6BvC,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,iBAAiB,EAAEC,cAAc,IAAIF,QAAQ,CAAChB,0BAA0B,CAACkB,cAAD,CAA3B;AADT,CAAL,CAAnC;;AAKA,eAAenB,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCT,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport CollectionsOverview from \"../../components/collectionsOverview/CollectionsOverview\";\nimport CollectionPage from '../collection/Collection';\nimport {connect} from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/withSpinner/WithSpinner';\nimport {createStructuredSelector} from 'reselect';\nimport {selectIsCollectionFetching} from '../../redux/shop/shopSelectors'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\n\nclass ShopPage extends React.Component {\n\n    componentDidMount(){\n    \n    }\n\n    render() {\n        const {match} = this.props;\n        const {loading} = this.state;\n        return(\n            <div className=\"shop-page\">\n                    <Route exact path={`${match.path}`} \n                    render={props => (\n                        <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n                    )} \n                    />\n                    <Route\n                        path={`${match.path}/:collectionId`}\n                        render={props => (\n                            <CollectionPageWithSpinner isLoading={loading} {...props} />\n                        )}\n                    />\n                   \n            </div>\n        )\n    }\n    \n   }\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(fetchCollectionsStartAsync(collectionsMap))\n})\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}