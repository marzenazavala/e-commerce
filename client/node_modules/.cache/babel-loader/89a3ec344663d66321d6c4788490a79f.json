{"ast":null,"code":"import shopActionTypes from './shopTypes';\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // updateCollections(collectionsMap);\n\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/marzena/gato-negro/src/redux/shop/shopActions.js"],"names":["shopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","setState","loading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,aAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ;AADgC,CAAL,CAA9C;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACP,qBAAqB,EAAtB,CAAR;AAEAQ,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMR,cAAc,GAAGN,+BAA+B,CAACc,QAAD,CAAtD,CADiC,CAEjC;;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJD;AAKH,GATD;AAUH,CAXM","sourcesContent":["import shopActionTypes from './shopTypes';\nimport {convertCollectionsSnapshotToMap, firestore} from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n    type: shopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS\n})\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n\n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            // updateCollections(collectionsMap);\n            this.setState({loading: false})\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}