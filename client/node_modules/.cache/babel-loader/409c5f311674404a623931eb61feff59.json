{"ast":null,"code":"var _jsxFileName = \"/Users/marzena/gato-negro/src/pages/shopPage/ShopPage.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from \"../../components/collectionsOverview/CollectionsOverview\";\nimport CollectionPage from '../collection/Collection';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/withSpinner/WithSpinner';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/marzena/gato-negro/src/pages/shopPage/ShopPage.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACN,mBAAD,CAAlD;AACA,MAAMQ,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAGA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAF2B;AAAA,SAMnCC,uBANmC,GAMT,IANS;AAAA;;AAQnCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACT,MAAAA;AAAD,QAAsB,KAAKU,KAAjC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAGAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,cAAc,GAAGlB,+BAA+B,CAACiB,QAAD,CAAtD;AACAf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJD;AAMH;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKT,KAArB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AACA,MAAA,MAAM,EAAEV,KAAK,iBACT,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,eAMQ,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAEV,KAAK,iBACT,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,CADJ;AAgBH;;AAxCkC;;AA4CvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCtB,EAAAA,iBAAiB,EAAEgB,cAAc,IAAIM,QAAQ,CAACtB,iBAAiB,CAACgB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAKA,eAAejB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport CollectionsOverview from \"../../components/collectionsOverview/CollectionsOverview\";\nimport CollectionPage from '../collection/Collection';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\nimport {connect} from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/withSpinner/WithSpinner';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\n\nclass ShopPage extends React.Component {\n\n    state = {\n        loading: true\n    };\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount(){\n        const {updateCollections} = this.props;\n        const collectionRef = firestore.collection('collections');\n\n        \n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            updateCollections(collectionsMap);\n            this.setState({loading: false})\n        })\n\n    }\n\n    render() {\n        const {match} = this.props;\n        const {loading} = this.state;\n        return(\n            <div className=\"shop-page\">\n                    <Route exact path={`${match.path}`} \n                    render={props => (\n                        <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n                    )} \n                    />\n                    <Route\n                        path={`${match.path}/:collectionId`}\n                        render={props => (\n                            <CollectionPageWithSpinner isLoading={loading} {...props} />\n                        )}\n                    />\n                   \n            </div>\n        )\n    }\n    \n   }\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}